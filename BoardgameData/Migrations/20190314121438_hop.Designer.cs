// <auto-generated />
using System;
using BoardgameData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoardgameData.Migrations
{
    [DbContext(typeof(BoardgameContext))]
    [Migration("20190314121438_hop")]
    partial class hop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("BoardgameData.Models.Boardgame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.ToTable("Boardgames");
                });

            modelBuilder.Entity("BoardgameData.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PlayedId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("PlayedId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BoardgameData.Models.Played", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BoardgameId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("BoardgameId");

                    b.ToTable("Plays");
                });

            modelBuilder.Entity("BoardgameData.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BoardgameData.Models.PlayerPlayed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PlayedId");

                    b.Property<int?>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("PlayedId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerPlayed");
                });

            modelBuilder.Entity("BoardgameData.Models.Image", b =>
                {
                    b.HasOne("BoardgameData.Models.Played")
                        .WithMany("Images")
                        .HasForeignKey("PlayedId");
                });

            modelBuilder.Entity("BoardgameData.Models.Played", b =>
                {
                    b.HasOne("BoardgameData.Models.Boardgame", "Boardgame")
                        .WithMany()
                        .HasForeignKey("BoardgameId");
                });

            modelBuilder.Entity("BoardgameData.Models.PlayerPlayed", b =>
                {
                    b.HasOne("BoardgameData.Models.Played", "Played")
                        .WithMany("Players")
                        .HasForeignKey("PlayedId");

                    b.HasOne("BoardgameData.Models.Player", "Player")
                        .WithMany("Plays")
                        .HasForeignKey("PlayerId");
                });
#pragma warning restore 612, 618
        }
    }
}
